#
# AFL dictionary for YANG, a data modeling language used by NETCONF.
# For more details see RFC 7950.
# ----------------------------
#
# Created by Juraj Vijtiuk <juraj.vijtiuk@sartura.hr>
comment_block_end="*/"
comment_block_start="/*"
comment_cpp="//"

function_bit_is_set="bit-is-set()"
function_current="current()"
function_deref="deref()"
function_derived_from="derived-from()"
function_derived_from_or_self="derived-from-or-self()"
function_enum_value="enum-value()"
function_re_match="re-match()"

keyword_add="add"
keyword_and="and"
keyword_current="current"
keyword_delete="delete"
keyword_deprecated="deprecated"
keyword_false="false"
keyword_invert_match="invert-match"
keyword_max="max"
keyword_min="min"
keyword_not="not"
keyword_not_supported="not-supported"
keyword_obsolete="obsolete"
keyword_or="or"
keyword_replace="replace"
keyword_system="system"
keyword_true="true"
keyword_unbounded="unbounded"
keyword_user="user"

statement_action="action"
statement_anydata="anydata"
statement_anyxml="anyxml"
statement_argument="argument"
statement_augment="augment"
statement_base="base"
statement_belongs_to="belongs-to"
statement_bit="bit"
statement_case="case"
statement_choice="choice"
statement_config="config"
statement_contact="contact"
statement_container="container"
statement_default="default"
statement_description="description"
statement_deviate="deviate"
statement_deviation="deviation"
statement_enum="enum"
statement_error_message="error-message"
statement_error_app_tag="error-app-tag"
statement_extension="extension"
statement_feature="feature"
statement_fraction_digits="fraction-digits"
statement_grouping="grouping"
statement_identity="identity"
statement_if_feature="if-feature"
statement_import="import"
statement_include="include"
statement_input="input"
statement_leaf_list="leaf-list"
statement_leaf="leaf"
statement_length="length"
statement_list="list"
statement_key="key"
statement_mandatory="mandatory"
statement_max_elements="max-elements"
statement_max_elements="min-elements"
statement_module="module"
statement_modifier="modifier"
statement_must="must"
statement_namespace="namespace"
statement_notification="notification"
statement_ordered_by="ordered-by"
statement_organization="organization"
statement_output="output"
statement_path="path"
statement_pattern="pattern"
statement_position="position"
statement_prefix="prefix"
statement_presence="presence"
statement_range="range"
statement_reference="reference"
statement_require_instance="require-instance"
statement_refine="refine"
statement_revision="revision"
statement_revision_date="revision-date"
statement_rpc="rpc"
statement_submodule="submodule"
statement_status="status"
statement_type="type"
statement_typedef="typedef"
statement_unique="unique"
statement_units="units"
statement_uses="uses"
statement_value="value"
statement_when="when"
statement_yang_version="yang-version"
statement_yin_element="yin-element"

token_semicolon=";"
token_brace_close="}"
token_brace_open="{"

type_binary="binary"
type_bits="bits"
type_boolean="boolean"
type_decimal64="decimal64"
type_empty="empty"
type_enumeration="enumeration"
type_identityref="identityref"
type_instance_identifier="instance-identifier"
type_int8="int8"
type_int16="int16"
type_int32="int32"
type_int64="int64"
type_leafref="leafref"
type_string="string"
type_uint8="uint8"
type_uint16="uint16"
type_uint32="uint32"
type_uint64="uint64"
type_union="union"
